// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cine {
  id        Int      @id @default(autoincrement())
  nombre    String
  direccion String
  salas     Sala[]   @relation("CineSala")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Sala {
  id        Int       @id @default(autoincrement())
  numero    Int
  capacidad Int
  id_cine   Int
  cine      Cine      @relation("CineSala", fields: [id_cine], references: [id], onDelete: Cascade)
  funciones Funcion[] @relation("SalaFuncion")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
}

model Genero {
  id        Int        @id @default(autoincrement())
  nombre    String
  peliculas Pelicula[] @relation("PeliculaGenero")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now()) @updatedAt
}

model Pelicula {
  id               Int       @id @default(autoincrement())
  titulo           String
  director         String
  duracion_minutos Int
  id_genero        Int
  genero           Genero    @relation("PeliculaGenero", fields: [id_genero], references: [id], onDelete: Cascade)
  funciones        Funcion[] @relation("PeliculaFuncion")
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @default(now()) @updatedAt
}

model Funcion {
  id          Int      @id @default(autoincrement())
  id_pelicula Int
  id_sala     Int
  fecha       DateTime
  pelicula    Pelicula @relation("PeliculaFuncion", fields: [id_pelicula], references: [id], onDelete: Cascade)
  sala        Sala     @relation("SalaFuncion", fields: [id_sala], references: [id], onDelete: Cascade)
  boletos     Boleto[] @relation("FuncionBoleto")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
}

model Boleto {
  id         Int      @id @default(autoincrement())
  id_funcion Int
  id_cliente Int
  asiento    String
  precio     Float
  funcion    Funcion  @relation("FuncionBoleto", fields: [id_funcion], references: [id], onDelete: Cascade)
  cliente    Cliente  @relation("ClienteBoleto", fields: [id_cliente], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt
}

model Cliente {
  id        Int      @id @default(autoincrement())
  nombre    String
  apellido  String
  correo    String?
  telefono  String
  boletos   Boleto[] @relation("ClienteBoleto")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
