// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Patient {
  id               Int             @id @default(autoincrement())
  name             String
  dateOfBirth      DateTime
  gender           String
  address          String
  phoneNumber      String
  email            String
  insuranceInfo    String
  emergencyContact String
  appointments     Appointment[]
  medicalRecords   MedicalRecord[]
  admissions       Admission[]
  Prescription     Prescription[]
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
}

model Doctor {
  id            Int            @id @default(autoincrement())
  name          String
  specialty     String
  phoneNumber   String
  email         String
  availability  String
  appointments  Appointment[]
  prescriptions Prescription[]
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
}

model Appointment {
  id        Int      @id @default(autoincrement())
  date      DateTime
  reason    String
  notes     String?
  patient   Patient  @relation(fields: [patientId], references: [id])
  patientId Int
  doctor    Doctor   @relation(fields: [doctorId], references: [id])
  doctorId  Int
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
}

model MedicalRecord {
  id        Int      @id @default(autoincrement())
  date      DateTime
  diagnosis String
  treatment String?
  patient   Patient  @relation(fields: [patientId], references: [id])
  patientId Int
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
}

model Prescription {
  id             Int      @id @default(autoincrement())
  medicationName String
  dosage         String
  startDate      DateTime
  endDate        DateTime
  patient        Patient  @relation(fields: [patientId], references: [id])
  patientId      Int
  doctor         Doctor   @relation(fields: [doctorId], references: [id])
  doctorId       Int
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
}

model Ward {
  id         Int         @id @default(autoincrement())
  name       String
  location   String
  numBeds    Int
  admissions Admission[]
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
}

model Admission {
  id              Int       @id @default(autoincrement())
  dateOfAdmission DateTime
  dateOfDischarge DateTime?
  reason          String
  patient         Patient   @relation(fields: [patientId], references: [id])
  patientId       Int
  ward            Ward      @relation(fields: [wardId], references: [id])
  wardId          Int
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
}
