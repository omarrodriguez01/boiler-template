generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Book {
  id               Int      @id @default(autoincrement())
  title            String
  author           String
  publicationYear  Int
  availability     Boolean
  borrowings       Borrowing[]
  genres           BookGenre[]
}

model Author {
  id          Int      @id @default(autoincrement())
  name        String
  biography   String
}

model Member {
  id                Int      @id @default(autoincrement())
  name              String
  address           String
  phone             String
  email             String
  membershipStatus  String
  borrowings        Borrowing[]
}

model Borrowing {
  id              Int        @id @default(autoincrement())
  member          Member     @relation(fields: [memberId], references: [id])
  book            Book       @relation(fields: [bookId], references: [id])
  borrowingDate   DateTime
  returnDate      DateTime
  memberId        Int
  bookId          Int

  // Add the opposite relation fields
  @@map("borrowings") // Optional, specifies the table name in the database
  @@unique([memberId, bookId])
  @@index([bookId])
  @@index([memberId])
}

model Genre {
  id          Int      @id @default(autoincrement())
  name        String
  books       BookGenre[]
}

model BookGenre {
  book       Book   @relation(fields: [bookId], references: [id])
  genre      Genre  @relation(fields: [genreId], references: [id])

  bookId     Int
  genreId    Int

  // Add the opposite relation fields
  @@id([bookId, genreId])
  @@index([bookId])
  @@index([genreId])
}